(the-file-[./set.smt2]-cannot-open-for-read)
;;
;;By [patsolve_smt2]:
;;
(declare-sort s2rt_cls 0)
(declare-sort s2rt_eff 0)
(declare-sort s2rt_prop 0)
(declare-sort s2rt_t0ype 0)
(declare-sort s2rt_tkind 0)
(declare-sort s2rt_error 0)
(define-sort s2rt_int () Int)
(define-sort s2rt_addr () Int)
(define-sort s2rt_bool () Bool)
(define-sort file_mode () Int)
(define-sort s2rt_view () s2rt_prop)
(define-sort s2rt_type () s2rt_t0ype)
(define-sort s2rt_vtype () s2rt_t0ype)
(define-sort s2rt_vt0ype () s2rt_t0ype)
(define-fun unit_p () Bool true)
(define-fun s2exp_fun ((x Bool)) Bool x)
(define-fun s2exp_eqeq ((x Bool)) Bool x)
(define-fun s2exp_metdec ((x Bool)) Bool x)
(declare-fun s2exp_sizeof (s2rt_t0ype) Int)
(define-fun neg_int ((x Int)) Int (- x))
(define-fun abs_int ((x Int)) Int (abs x))
(define-fun add_int_int ((x Int) (y Int)) Int (+ x y))
(define-fun sub_int_int ((x Int) (y Int)) Int (- x y))
(define-fun mul_int_int ((x Int) (y Int)) Int (* x y))
(define-fun div_int_int ((x Int) (y Int)) Int (div x y))
(define-fun mod_int_int ((x Int) (y Int)) Int (mod x y))
(define-fun idiv_int_int ((x Int) (y Int)) Int (div x y))
(define-fun ndiv_int_int ((x Int) (y Int)) Int (div x y))
(define-fun eq_int_int ((x Int) (y Int)) Bool (= x y))
(define-fun lt_int_int ((x Int) (y Int)) Bool (< x y))
(define-fun gt_int_int ((x Int) (y Int)) Bool (> x y))
(define-fun lte_int_int ((x Int) (y Int)) Bool (<= x y))
(define-fun gte_int_int ((x Int) (y Int)) Bool (>= x y))
(define-fun neq_int_int ((x Int) (y Int)) Bool (not (= x y)))
(define-fun max_int_int ((x Int) (y Int)) Int (ite (>= x y) x y))
(define-fun min_int_int ((x Int) (y Int)) Int (ite (<= x y) x y))
(define-fun sgn_int ((x Int)) Int (ite (> x 0) 1 (ite (>= x 0) 0 (- 1))))
(define-fun null_addr () s2rt_addr 0)
(define-fun add_addr_int ((x s2rt_addr) (y Int)) s2rt_addr (+ x y))
(define-fun sub_addr_int ((x s2rt_addr) (y Int)) s2rt_addr (- x y))
(define-fun eq_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (= x y))
(define-fun lt_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (< x y))
(define-fun gt_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (> x y))
(define-fun lte_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (<= x y))
(define-fun gte_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (>= x y))
(define-fun neq_addr_addr ((x s2rt_addr) (y s2rt_addr)) Bool (not (= x y)))
(define-fun true_bool () Bool true)
(define-fun false_bool () Bool false)
(define-fun neg_bool ((x Bool)) Bool (not x))
(define-fun add_bool_bool ((x Bool) (y Bool)) Bool (or x y))
(define-fun mul_bool_bool ((x Bool) (y Bool)) Bool (and x y))
(define-fun eq_bool_bool ((x Bool) (y Bool)) Bool (= x y))
(define-fun lt_bool_bool ((x Bool) (y Bool)) Bool (and (not x) y))
(define-fun gt_bool_bool ((x Bool) (y Bool)) Bool (and x (not y)))
(define-fun neq_bool_bool ((x Bool) (y Bool)) Bool (not (= x y)))
(define-fun lte_bool_bool ((x Bool) (y Bool)) Bool (or (not x) y))
(define-fun gte_bool_bool ((x Bool) (y Bool)) Bool (or x (not y)))
;;
;;emit_the_s2cstmap()
;;
(declare-fun g0int_t0ype!207 (s2rt_tkind) s2rt_t0ype)
(declare-fun pend!808 (s2rt_int) stype)
(declare-fun pbmsg!810 (s2rt_int s2rt_t0ype) stype)
(declare-fun pseq!811 (stype stype) stype)
(declare-fun pfix!814 ((s2rt_fun (stype) stype)) stype)
;;
;;ATS-constraints
;;generated during typechecking
;;
(push 1)
(push 1)
(push 1)
(push 1)
(push 1)
(declare-fun s$967$968$969!4429 () stype)
(push 1)
(push 1)
(assert (not (smt_set_sub (smt_set_add (smt_set_add smt_set_emp 1) 0) (smt_set_add smt_set_emp 0))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 514(line=19, offs=27) -- 514(line=19, offs=27)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (smt_set_sub (smt_set_add (smt_set_add smt_set_emp 1) 0) (smt_set_add smt_set_emp 0))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 547(line=20, offs=29) -- 547(line=20, offs=29)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (smt_set_mem (smt_set_dif (smt_set_add (smt_set_add smt_set_emp 1) 0) (smt_set_add smt_set_emp 0)) 1)))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 547(line=20, offs=29) -- 547(line=20, offs=29)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(declare-fun p$958!4418 () stype)
(declare-fun q$959!4419 () stype)
(assert (s2exp_eqeq (= s$967$968$969!4429 p$958!4418)))
(assert (s2exp_eqeq (= p$958!4418 (pseq!811 (pbmsg!810 0 (g0int_t0ype!207 S2Eextkind(atstype_int))) (pfix!814 S2Eerror())))))
(assert (s2exp_eqeq (= q$959!4419 (pend!808 1))))
(push 1)
(push 1)
(assert (not (smt_set_sub (smt_set_add (smt_set_add smt_set_emp 1) 0) (smt_set_add smt_set_emp 0))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 606(line=23, offs=31) -- 606(line=23, offs=31)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (smt_set_mem (smt_set_add smt_set_emp 0) 0)))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 606(line=23, offs=31) -- 606(line=23, offs=31)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(pop 1)
(pop 1)
(push 1)
(declare-fun p$960!4420 () stype)
(declare-fun q$961!4421 () stype)
(assert (s2exp_eqeq (= s$967$968$969!4429 q$961!4421)))
(assert (s2exp_eqeq (= p$960!4420 (pseq!811 (pbmsg!810 0 (g0int_t0ype!207 S2Eextkind(atstype_int))) (pfix!814 S2Eerror())))))
(assert (s2exp_eqeq (= q$961!4421 (pend!808 1))))
(push 1)
(push 1)
(assert (not (smt_set_sub (smt_set_add (smt_set_add smt_set_emp 1) 0) (smt_set_add smt_set_emp 0))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 662(line=24, offs=29) -- 662(line=24, offs=29)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (smt_set_mem (smt_set_dif (smt_set_add (smt_set_add smt_set_emp 1) 0) (smt_set_add smt_set_emp 0)) 1)))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 662(line=24, offs=29) -- 662(line=24, offs=29)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(push 1)
(push 1)
(assert (not (s2exp_eqeq (= (smt_set_cup (smt_set_add smt_set_emp 1) (smt_set_add smt_set_emp 0)) (smt_set_add (smt_set_add smt_set_emp 1) 0)))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 727(line=27, offs=53) -- 729(line=27, offs=55)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (s2exp_eqeq (= (smt_set_add smt_set_emp 1) (smt_set_add smt_set_emp 0)))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 727(line=27, offs=53) -- 729(line=27, offs=55)")
(check-sat)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (s2exp_eqeq (= (smt_set_cup (smt_set_add smt_set_emp 1) (smt_set_add smt_set_emp 0)) (smt_set_add (smt_set_add smt_set_emp 1) 0)))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 676(line=27, offs=2) -- 734(line=27, offs=60)")
(check-sat)
(pop 1)
(pop 1)
(push 1)
(push 1)
(assert (not (s2exp_eqeq (= (smt_set_add smt_set_emp 0) (smt_set_add smt_set_emp 1)))))
(echo "/Users/hwwu/Git/ats-sessions/examples/ex-sieve.dats: 676(line=27, offs=2) -- 734(line=27, offs=60)")
(check-sat)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
